#include <stdio.h>

// Function to remove duplicates
int removeDuplicates(int arr[], int n) 
{
    int newArr[n];  // Temporary array to store unique elements
    int j = 0;      // Index for unique elements

    for (int i = 0; i < n; i++) 
    {
        int found = 0; // Flag to check if element exists in newArr

        // Check if arr[i] already exists in newArr
        for (int k = 0; k < j; k++) 
        {
            if (arr[i] == newArr[k]) 
            {
                found = 1; 
                break; 
            }
        }

        // If not found, add to newArr
        if (!found) 
        {
            newArr[j++] = arr[i]; 
        }
    }

    // Copy unique elements back to original array
    for (int i = 0; i < j; i++) 
    {
        arr[i] = newArr[i];
    }

    return j; // Return new size of array
}

// Function to print an array
void printArray(int arr[], int size) 
{
    for (int i = 0; i < size; i++) 
    {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() 
{
    int arr[] = {1, 2, 2, 3, 4, 4, 5, 5, 6};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: ");
    printArray(arr, n);

    // Remove duplicates
    n = removeDuplicates(arr, n);

    printf("Array after removing duplicates: ");
    printArray(arr, n);

    return 0;
}
